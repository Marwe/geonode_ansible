---
 
- git:
    repo: 'https://github.com/GeoNode/geonode-project.git'
    dest: "{{ install_root }}/geonode-project"
    clone: yes
    version: master

- name: Install Django
  pip: 
    name: Django
    version: "{{ django_version }}"
    virtualenv: "{{ install_root }}/.venv/{{ name_of_project }}"

- name: Create new Geonode geonode-project
  command: "{{ install_root }}/.venv/{{ name_of_project }}/bin/django-admin startproject --template=./geonode-project -e py,rst,json,yml,ini,env,sample -n Dockerfile my_geonode"
  args:
    chdir: "{{ install_root }}"
    creates: "{{ install_root }}/{{ name_of_project }}"

- name: Install requirements.txt
  pip: 
    requirements: "{{ install_root }}/{{ name_of_project }}/requirements.txt"
    virtualenv: "{{ install_root }}/.venv/{{ name_of_project }}"
    chdir: "{{ install_root }}/{{ name_of_project }}"
    extra_args: --upgrade 

#- name: Run pip upgrade
#  command: "{{ install_root }}/.venv/{{ name_of_project }}/bin/pip install -e . --upgrade"
#  args: 
#    chdir: "{{ install_root }}/{{ name_of_project }}"

- name: Upgrade pip packages 
  pip: 
    name: "{{ install_root }}/{{ name_of_project }}/"
    editable: true
    virtualenv: "{{ install_root }}/.venv/{{ name_of_project }}"
    extra_args: --upgrade

- name: Install correct Version of pygdal
  pip: 
    name: pygdal
    version: 2.2.1.3
    virtualenv: "{{ install_root }}/.venv/{{ name_of_project }}"

- name: Copy file with geoserver path information
  copy:
    src: ./assets/dev_config.yml
    dest: "{{ install_root }}/{{ name_of_project }}/dev_config.yml"
    owner: vagrant
    group: vagrant
    mode: 0744

